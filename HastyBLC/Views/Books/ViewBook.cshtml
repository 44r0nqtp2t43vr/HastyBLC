@model HastyBLC.Models.BookViewModel
@section styles {
    <link rel="stylesheet" href="~/css/viewbook.css" />
}

@{
    ViewData["Title"] = "View Book Details";
}

<html>
<body class="viewbook">
    <!-- The Modal -->
    @await Html.PartialAsync("_Review", new Services.ServiceModels.ReviewViewModel())
    @await Html.PartialAsync("_Comment", new Services.ServiceModels.CommentViewModel())

    <div class="book-top-section">
        @* <a href="#" onclick="goBack()" class="back-button">←</a> *@
        <a asp-controller="Books" asp-action="Books" class="back-button">←</a>
        <div class="image-and-rating-container">
            <div class="book-image-container-view">
                <img src="~/@Html.Raw(Model.Image)" alt="@Model.Title" class="book-detail-image" />
            </div>
            <div class="avg-rating">
                <div class="rating-title">
                    <h3>Rating</h3>
                </div>

                <div class="star-rating">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Model.AverageRating)
                        {
                            <span class="fa fa-star checked"></span>
                        }
                        else
                        {
                            <span class="fa fa-star-o"></span>
                        }
                    }
                </div>
                <p class="average-rating-value">@Math.Round(Model.AverageRating, 1).ToString("0.0")/5.0</p>
                
            </div>
            <div class="score-bar-container">
                @for (int i = Model.Percentages.Length; i > 0; i--)
                {
                    <div class="score-bar">
                        <div class="rating-number">@(i) Star@(i == 1 ? "" : "s"):</div>
                        <div class="rating-bar">
                            <div class="rating-bar-fill" style="width: @Model.Percentages[i - 1]%;"></div>
                        </div>
                        <span class="percentage-text">@Model.Percentages[i - 1].ToString("0")%</span>
                    </div>
                }
            </div>


        </div>
        <div class="title-author-container">
            <h2>@Model.Title</h2>
            <p>@Model.AuthorName</p>
        </div>
    </div>
    </div>
    <div class="book-details-container">
        <!-- Average Rating section -->
        

        <!-- Description section -->
        <div class="description-section">
            <strong>Description:</strong> 
            <p>@Model.Description</p>
        </div>

        <!-- Book details section -->
        <div class="book-details-section">
           
            <div class="book-details-group-1">
                <div><strong>Published Date:</strong> <p>@Model.PublishDate.ToString("yyyy-MM-dd")</p></div>
                <div><strong>Publisher:</strong> @Model.Publisher</div>
                <div><strong>Language:</strong> @Model.Language</div>
            </div>

            <div class="book-details-group-2">
                <div><strong>Format:</strong> @Model.Format</div>
                <div><strong>Pages:</strong> <p>@Model.Pages</p></div>
                <div><strong>ISBN:</strong> @Model.Isbn</div>
            </div>
            
        </div>

        <!-- Genres section -->
        <div class="genres-section">
            <hr class="section-divider">
            <strong>Genre/s:</strong>
            <div>
                @{
                    var genreList = Model.Genres ?? Enumerable.Empty<string>().ToList();
                    for (int i = 0; i < genreList.Count; i++)
                    {
                        <span>@genreList[i]@(i < (genreList.Count - 1) ? ", " : "")</span>
                    }
                }
            </div>
        </div>


        <!-- Book Reviews section -->
        <div class="book-reviews-section">
            <hr class="section-divider">
            <h3 class="book-reviews-title">Book Reviews</h3>
            <button class="btn btn-outline-danger addReviewBtn" data-book-id="@Model.BookId">Review this Book</button>

            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews!)
                {
                    <div class="review">
                        <div class="review-header">
                            <h4 class="review-author">@review.Name</h4>
                            <span class="review-email">@review.UserEmail</span>
                            <div class="review-rating-container">
                                <div class="rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <span class="fa fa-star @(i <= review.Rating ? "checked" : "")"></span>
                                    }
                                </div>
                            </div>
                        </div>
                        <p class="review-description">@review.Description</p>

                        <!-- Show Comments Button -->
                        <button class="btn show-comments-btn">
                            <span class="button-text"> Show Comments</span>
                            <i class="fas fa-chevron-down icon-expand"></i>
                            <i class="fas fa-chevron-up icon-collapse" style="display:none;"></i>
                        </button>

                        <!-- Comments Section for this Review -->
                        <div class="comments-section" style="display: none;">
                            @foreach (var comment in review.Comments!)
                            {
                                <div class="comment">
                                    <div class="comment-header">
                                        <h6 class="comment-author">@comment.Name</h6>
                                        <span class="comment-email">@comment.UserEmail</span>
                                    </div>
                                    <p class="comment-description">@comment.Description</p>
                                </div>
                            }

                            <!-- Add Comment Button -->
                            <button class="btn btn-outline-danger addCommentBtn" data-review-id="@review.ReviewId">
                                Add Comment
                            </button>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="no-reviews-message">No reviews.</p>
            }
        </div>

        </div>

    
    <script>
        function goBack() {
            var baseBooksUrl = '@ViewBag.BaseBooksUrl'; // This will hold the stored page URL
            if (baseBooksUrl != '') {
                // You can use this URL or perform actions with it as needed
                window.location.href = baseBooksUrl; // For example, redirect to the stored page
            } else {
                window.history.back();
            }
            return false;  
        }
    </script>


</body>
</html>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/js/book.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var commentsButtons = document.querySelectorAll('.show-comments-btn');

        commentsButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                var commentsSection = this.nextElementSibling; // The comments section immediately following the button

                if (commentsSection.style.display === 'none' || commentsSection.style.display === '') {
                    commentsSection.style.display = 'block';
                    this.querySelector('.icon-expand').style.display = 'none';
                    this.querySelector('.icon-collapse').style.display = 'block';
                } else {
                    commentsSection.style.display = 'none';
                    this.querySelector('.icon-expand').style.display = 'block';
                    this.querySelector('.icon-collapse').style.display = 'none';
                }
            });
        });
    });


</script>