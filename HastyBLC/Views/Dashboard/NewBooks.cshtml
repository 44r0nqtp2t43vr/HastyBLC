@model IEnumerable<Book>
@{
    ViewData["Title"] = "New Books";
    int currentPage = (int)ViewData["CurrentPage"]!;
    int totalPages = (int)ViewData["TotalPages"]!;
}
@section styles {
    <link rel="stylesheet" href="~/css/HastyBLC.css" />
    <link rel="stylesheet" href="~/css/viewbook.css" />
}
<html>
<body>
    <div class="sidebar">
        <div class="image">
            <img src="~/img/logo.png" class="imagehw">
        </div>
        <div class="hasty">
            <h1>HASTY</h1>
            <h1>BLC</h1>
        </div>
        <div class="screens">
            <a asp-controller="Dashboard" asp-action="Dashboard" class="active">Dashboard</a>
            <a asp-controller="Books" asp-action="Books">Browse Books</a>
        </div>
    </div>
    <div class="content">
        <div>
            <h2 class="title"><a asp-controller="Dashboard" asp-action="Dashboard" class="back-buttonn">←</a> New Books</h2>
            <div class="viewAll-book-row">
                @foreach (var book in Model.OrderByDescending(book => book.CreatedTime))
                {
                    <div class="topBookContainer">
                        <div class="book-image-container">
                            @* <h5 style="max-width:150px;">@book.Title</h5> *@
                            <ul>
                                <a asp-controller="Books" asp-action="ViewBook" asp-route-id="@book.BookId">
                                    <img src="~/@Html.Raw(book.Image)" alt="@book.Title" class="book-image" />
                                </a>
                                @* <li>@book.Author</li> *@
                                <!-- <li>@book.CreatedTime</li> -->
                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div class="fixed-pagination-container">
                <ul class="pagination justify-content-center spaced-pagination">
                    <li class="page-item">
                        <a class="page-link arrow-link" href="@Url.Action("NewBooks", new { page = 1 })">&#9664;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link arrow-link" href="@Url.Action("NewBooks", new { page = Math.Max(currentPage - 1, 1) })">&#8249;</a>
                    </li>
                    @if (totalPages > 5)
                    {
                        @if (currentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link page-number" href="@Url.Action("NewBooks", new { page = 1 })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link" ; style="border: none; background-color: #EEDEAA; color: black">...</span>
                            </li>
                        }
                        @for (int i = Math.Max(currentPage - 2, 1); i <= Math.Min(currentPage + 2, totalPages); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link page-number" href="@Url.Action("NewBooks", new { page = i })">@i</a>
                            </li>
                        }
                        @if (currentPage < totalPages - 2)
                        {
                            <li class="page-item disabled">
                                <span class="page-link" ; style="border: none; background-color: #EEDEAA; color: black">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link page-number" href="@Url.Action("NewBooks", new { page = totalPages })">@totalPages</a>
                            </li>
                        }
                    }
                    else
                    {
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link page-number" href="@Url.Action("NewBooks", new { page = i })">@i</a>
                            </li>
                        }
                    }
                    <li class="page-item">
                        <a class="page-link arrow-link" href="@Url.Action("NewBooks", new { page = Math.Min(currentPage + 1, totalPages) })">&#8250;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link arrow-link" href="@Url.Action("NewBooks", new { page = totalPages })">&#9654;</a>
                    </li>
                </ul>
            </div>

        </div>
    </div>
    <script>
        function goBack() {
            window.history.back();
            return false;
        }
    </script>
</body>
</html>
