@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model Services.ServiceModels.ReviewViewModel
<link rel="stylesheet" href="~/css/addgenre.css" />
<div class="modal" id="editReviewModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Edit Review</h4>
            </div>
            <!-- Modal body -->
            <form method="post" action="/Books/EditReview">
                <input type="hidden" id="editReviewId" asp-for="ReviewId" />
                <div class="form-outline mb-4">
                    <label class="form-label" for="name">Name</label>
                    <input type="text" id="editReviewName" class="form-control"
                           asp-for="Name" placeholder="Enter name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-outline mb-4">
                    <label class="form-label" for="userEmail">Email</label>
                    <input type="text" id="editReviewUserEmail" class="form-control"
                           asp-for="UserEmail" placeholder="Enter email" />
                    <span asp-validation-for="UserEmail" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label"> Stars: </label><br />
                    @for (int i = 1; i <= 5; i++)
                    {
                        <input type="radio" id="editReviewRating@i" name="Rating" value="@i" @(Model.Rating == i ? "checked" : "") required />
                        <label for="editReviewRating@i" class="fa fa-star @(Model.Rating >= i ? "checked" : "")"></label>
                    }
                </div>

                <div class="form-outline mb-4">
                    <label class="form-label" for="description">Review</label>
                    <input type="text" id="editReviewDescription" class="form-control"
                           asp-for="Description" placeholder="Enter review" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn-custom btn-close" data-dismiss="modal">Close</button>
                    <button class="btn-custom btn-add-genre" type="submit">Edit Review</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/js/viewbook.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var stars = document.querySelectorAll('.form-group .fa-star');
        var ratingInput = document.querySelector('input[name="Rating"]');

        stars.forEach(function (star, index) {
            star.addEventListener('click', function () {
                var newRating = index + 1; // Calculate new rating based on the star index

                // Update the stars display in the modal
                stars.forEach(function (s, idx) {
                    if (idx < newRating) {
                        s.classList.add('checked');
                    } else {
                        s.classList.remove('checked');
                    }
                });

                // Set the value of the hidden rating input in the modal
                ratingInput.value = newRating;

                // Trigger a change event on the rating input to update the model value
                var event = new Event('change');
                ratingInput.dispatchEvent(event);

                // Update the stars display in the ViewBook page
                updateStarsInViewBook(newRating);
            });
        });

        function updateStarsInViewBook(rating) {
            // Update the stars display in the ViewBook page
            var viewBookStars = document.querySelectorAll('.avg-rating .fa-star');

            viewBookStars.forEach(function (star, index) {
                if (index < rating) {
                    star.classList.add('checked');
                } else {
                    star.classList.remove('checked');
                }
            });
        }

        // Handle the edit button click event
        var editButtons = document.querySelectorAll('.editReviewBtn');
        editButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                var rating = this.getAttribute('data-review-rating');
                var reviewId = this.getAttribute('data-review-id');

                document.getElementById('editReviewId').value = reviewId;

                if (rating) {
                    updateStarRating(parseInt(rating));
                    updateStarsInViewBook(parseInt(rating));
                }
            });
        });
    });
</script>
